//noinspection GroovyAssignabilityCheck
buildscript {
    dependencies {
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.6.8"
    }
}
//noinspection GroovyAssignabilityCheck
plugins {
    id 'org.octopusden.octopus-release-management'
    id 'org.springframework.boot'                 apply false
    id 'org.jetbrains.kotlin.jvm'                 apply false
    id 'org.jetbrains.kotlin.plugin.spring'       apply false
    id 'org.jetbrains.kotlin.plugin.jpa'          apply false
}

allprojects {
    group = 'org.octopusden.octopus.infrastructure'
}

subprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url = uri("https://repo.spring.io/plugins-release/")
        }
        maven {
            url = uri("https://repo.gradle.org/gradle/libs-releases-local")
        }
        maven {
            url = uri("https://oss.sonatype.org/content/repositories/releases/")
        }
    }
}

configure(subprojects) {
    apply plugin: 'idea'
    apply plugin: 'java-library'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib"
        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation platform("com.fasterxml.jackson:jackson-bom:${project['jackson.version']}")
        testImplementation enforcedPlatform("org.junit:junit-bom:${project.'junit-jupiter.version'}")
        testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"
        testImplementation "org.junit.jupiter:junit-jupiter-engine"
        testImplementation "org.junit.jupiter:junit-jupiter-params"
        testImplementation "junit:junit:4.12"
        testRuntimeOnly "org.junit.vintage:junit-vintage-engine"
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    test {
        useJUnitPlatform()
        systemProperties = [
            'junit.jupiter.execution.parallel.enabled': true
        ]
    }

    java {
        withJavadocJar()
        withSourcesJar()
    }

    apply plugin: 'maven-publish'
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }
}
